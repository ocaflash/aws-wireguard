{
  "version": 4,
  "terraform_version": "1.1.5",
  "serial": 74,
  "lineage": "1e75dea0-9a6c-a0c7-a11d-504aec9eee67",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "latest_ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-00bb3d0b5b36e89b8",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0c7272d5ae917de19",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "boot_mode": "",
            "creation_date": "2022-08-10T12:41:31.000Z",
            "deprecation_time": "2024-08-10T12:41:31.000Z",
            "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2022-08-10",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "architecture",
                "values": [
                  "x86_64"
                ]
              },
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-*-server-*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-00bb3d0b5b36e89b8",
            "image_id": "ami-00bb3d0b5b36e89b8",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810",
            "image_owner_alias": "",
            "image_type": "machine",
            "include_deprecated": false,
            "kernel_id": "",
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": "",
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": "",
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0c7272d5ae917de19",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "timeouts": null,
            "tpm_support": "",
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "wireguard_userdata",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "4db2c3d50427a8e024dff6d35505fe9d202c70645fcfd1da48f169eb9fa8ad84",
            "rendered": "#cloud-config\n# Add groups to the system\n# Adds the ubuntu group with members 'root' and 'sys'\n# and the empty group wguser.\ngroups:\n  - ubuntu: [root,sys]\n  - wguser\n  - docker\n\n# Add users to the system. Users are added after groups are added.\nusers:\n  - default\n  - name: wguser\n    gecos: wguser\n    shell: /bin/bash\n    primary_group: wguser\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    lock_passwd: false\n    ssh_authorized_keys: []\n\napt:\n  sources:\n    docker.list:\n      source: deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable\n      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88\n\npackages:\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\n  - docker-ce\n  - docker-ce-cli\n  - docker-compose\n  - containerd.io\n\nwrite_files:\n  - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf\n    content: |\n      net.ipv4.conf.all.forwarding=1\n  - path: /home/wguser/wireguard/docker-compose.yaml\n    content: |\n      version: \"3\"\n      services:\n        linguard:\n          image: \"ghcr.io/joseantmazonsb/linguard:stable\"\n          container_name: \"linguard\"\n          cap_add:\n            - NET_ADMIN\n            - NET_RAW\n          volumes:\n            - \"./linguard/data:/data\"\n          restart: unless-stopped\n          ports:\n            - \"8080:8080\"\n            - \"51820:51820/udp\"\n          sysctls:\n            - net.ipv4.conf.all.src_valid_mark=1\n\nsystem_info:\n  default_user:\n    groups: [docker]\n  wguser:\n    groups: [docker]\n\nruncmd:\n  - cd /home/wguser/wireguard \u0026\u0026 docker-compose up -d\n  - zip -r \"backup_$(date +\"%Y-%m-%d\").zip\" /home/wguser/wireguard/linguard/data/*\n",
            "template": "#cloud-config\n# Add groups to the system\n# Adds the ubuntu group with members 'root' and 'sys'\n# and the empty group wguser.\ngroups:\n  - ubuntu: [root,sys]\n  - wguser\n  - docker\n\n# Add users to the system. Users are added after groups are added.\nusers:\n  - default\n  - name: wguser\n    gecos: wguser\n    shell: /bin/bash\n    primary_group: wguser\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: users, admin\n    lock_passwd: false\n    ssh_authorized_keys: []\n\napt:\n  sources:\n    docker.list:\n      source: deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable\n      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88\n\npackages:\n  - apt-transport-https\n  - ca-certificates\n  - curl\n  - gnupg-agent\n  - software-properties-common\n  - docker-ce\n  - docker-ce-cli\n  - docker-compose\n  - containerd.io\n\nwrite_files:\n  - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf\n    content: |\n      net.ipv4.conf.all.forwarding=1\n  - path: /home/wguser/wireguard/docker-compose.yaml\n    content: |\n      version: \"3\"\n      services:\n        linguard:\n          image: \"ghcr.io/joseantmazonsb/linguard:stable\"\n          container_name: \"linguard\"\n          cap_add:\n            - NET_ADMIN\n            - NET_RAW\n          volumes:\n            - \"./linguard/data:/data\"\n          restart: unless-stopped\n          ports:\n            - \"8080:8080\"\n            - \"51820:51820/udp\"\n          sysctls:\n            - net.ipv4.conf.all.src_valid_mark=1\n\nsystem_info:\n  default_user:\n    groups: [docker]\n  wguser:\n    groups: [docker]\n\nruncmd:\n  - cd /home/wguser/wireguard \u0026\u0026 docker-compose up -d\n  - zip -r \"backup_$(date +\"%Y-%m-%d\").zip\" /home/wguser/wireguard/linguard/data/*\n",
            "vars": {
              "public_port": "5572"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "wireguard",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-08e1da0645b80d6e0",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0716b4dc2c4d288c3",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-08e1da0645b80d6e0",
            "instance": "i-024e11f75a6e53198",
            "network_border_group": "us-west-2",
            "network_interface": "eni-0244332348beb7e63",
            "private_dns": "ip-172-31-48-227.us-west-2.compute.internal",
            "private_ip": "172.31.48.227",
            "public_dns": "ec2-54-191-81-60.us-west-2.compute.amazonaws.com",
            "public_ip": "54.191.81.60",
            "public_ipv4_pool": "amazon",
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_instance.wireguard",
            "aws_security_group.wireguard",
            "data.aws_ami.latest_ubuntu",
            "data.template_file.wireguard_userdata",
            "random_integer.public_port"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "wireguard",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-00bb3d0b5b36e89b8",
            "arn": "arn:aws:ec2:us-west-2:207351400916:instance/i-024e11f75a6e53198",
            "associate_public_ip_address": true,
            "availability_zone": "us-west-2d",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-024e11f75a6e53198",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t3a.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-0244332348beb7e63",
            "private_dns": "ip-172-31-48-227.us-west-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.48.227",
            "public_dns": "ec2-44-234-254-137.us-west-2.compute.amazonaws.com",
            "public_ip": "44.234.254.137",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0a2e4a874549a38f7",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "wireguard-sg-vpn"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-e8eff4c3",
            "tags": {
              "Name": "wireguard-vpn"
            },
            "tags_all": {
              "Name": "wireguard-vpn"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "798d14c2a9f9ba8317b662394eb1270f6cf8d44a",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0f1ace7504dcd104c"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.wireguard",
            "data.aws_ami.latest_ubuntu",
            "data.template_file.wireguard_userdata",
            "random_integer.public_port"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:207351400916:key-pair/pub-key",
            "fingerprint": "NnECtSoB6XN+GjpQN43U24gegNU7A+w+bOT2+kgDvTw=",
            "id": "pub-key",
            "key_name": "pub-key",
            "key_name_prefix": "",
            "key_pair_id": "key-018bb6347adbd7480",
            "key_type": "ed25519",
            "public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIB4QHC+fKDm27r5/6/TZs1yjsCiX9OXsjnm4b4yzK5Ww aleksandrostapchuk@MacBook-Pro-Aleksandr.local",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "backup",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "wireguard",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:207351400916:security-group/sg-0f1ace7504dcd104c",
            "description": "Wireguard security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0f1ace7504dcd104c",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 51820,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 51820
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 5572,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 5572
              }
            ],
            "name": "wireguard-sg-vpn",
            "name_prefix": "",
            "owner_id": "207351400916",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-6cc2c514"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "random_integer.public_port"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_integer",
      "name": "public_port",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5572",
            "keepers": null,
            "max": 9999,
            "min": 1000,
            "result": 5572,
            "seed": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
