name: "Terraform Checks and PR Creation"

on:
  push:
    branches-ignore:
      - master

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    outputs:
      tflint_warnings: ${{ steps.tflint.outputs.warnings }}
      has_warnings: ${{ steps.tflint.outputs.has_warnings }}

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Setup tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      id: tflint
      shell: bash
      run: |
        set +e  # Отключаем автоматическое завершение при ошибках
        TFLINT_OUTPUT=$(tflint)
        TFLINT_EXIT_CODE=$?
        set -e  # Включаем обратно автоматическое завершение при ошибках
        
        echo "$TFLINT_OUTPUT"
        
        if echo "$TFLINT_OUTPUT" | grep -q "Warning:"; then
          WARNINGS=$(echo "$TFLINT_OUTPUT" | grep "Warning:")
          echo "warnings<<EOF" >> $GITHUB_OUTPUT
          echo "$WARNINGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "has_warnings=true" >> $GITHUB_OUTPUT
        else
          echo "has_warnings=false" >> $GITHUB_OUTPUT
        fi
        
        # Проверяем есть ли ошибки и завершаем скрипт с ошибкой только если есть Error
        if echo "$TFLINT_OUTPUT" | grep -q "Error:"; then
          exit 1
        fi
        
        # Если код возврата tflint был не 0, но ошибок нет (только warnings), 
        # всё равно продолжаем выполнение
        exit 0

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Check Token Permissions
      uses: actions/github-script@v6
      with:
        script: |
          console.log('Current Context:');
          console.log('Repository:', context.repo.repo);
          console.log('Owner:', context.repo.owner);
          console.log('Ref:', context.ref);
          console.log('Actor:', context.actor);

          try {
            const tokenPermissions = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
          } catch (error) {
            console.error('Error fetching repository details:', error);
          }

  createPullRequest:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs:
      - terraform-checks
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const currentBranch = context.ref.replace('refs/heads/', '');
            
            let prBody = 'Automated pull request for code review\n- Terraform configuration validated\n- CI checks completed successfully\n\n';
            
            if ('${{ needs.terraform-checks.outputs.has_warnings }}' === 'true') {
              prBody += '### ⚠️ TFLint Warnings:\n```\n${{ needs.terraform-checks.outputs.tflint_warnings }}\n```\n\n';
              prBody += 'Please review these warnings before merging.\n';
            }
            
            await github.rest.pulls.create({
              owner,
              repo,
              title: `Review: Changes in ${currentBranch}`,
              head: currentBranch,
              base: 'master',
              body: prBody
            });
