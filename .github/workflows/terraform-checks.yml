name: "Terraform Checks and PR Creation"

on:
  push:
    branches-ignore:
      - master

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Setup tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      id: tflint
      run: |
        tflint > tflint_output.txt || true
        TF_LINT_OUTPUT=$(cat tflint_output.txt)
        echo "TF_LINT_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "$TF_LINT_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        if grep -q "Warning:" tflint_output.txt; then
          echo "TF_LINT_WARNINGS=true" >> $GITHUB_ENV
        fi
        if grep -q "Error:" tflint_output.txt; then
          echo "TF_LINT_ERRORS=true" >> $GITHUB_ENV
        fi

    - name: Print tflint results to console
      run: |
        echo "tflint results:"
        echo "$TF_LINT_OUTPUT"

    - name: Fail if tflint errors
      if: env.TF_LINT_ERRORS == 'true'
      run: |
        echo "tflint found errors. Failing the workflow."
        exit 1

    - name: Fail if tflint warnings
      if: env.TF_LINT_WARNINGS == 'true'
      run: |
        echo "tflint found warnings. Failing the workflow."
        exit 1

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Check Token Permissions
      uses: actions/github-script@v6
      with:
        script: |
          console.log('Current Context:');
          console.log('Repository:', context.repo.repo);
          console.log('Owner:', context.repo.owner);
          console.log('Ref:', context.ref);
          console.log('Actor:', context.actor);

          try {
            const tokenPermissions = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
          } catch (error) {
            console.error('Error fetching repository details:', error);
          }

  createPullRequest:
    runs-on: ubuntu-latest
    needs:
      - terraform-checks
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          base: master
          branch: ${{ github.ref_name }}
          delete-branch: false
          title: 'Review: Changes from ${{ github.ref_name }}'
          body: |
            Automated pull request for code review
            - Terraform configuration validated
            - CI checks completed successfully
          draft: true

      - name: Check Pull Request Status
        if: steps.cpr.outputs.pull-request-number
        run: |
            echo "Pull Request Created - Number: ${{ steps.cpr.outputs.pull-request-number }}"
            echo "Pull Request URL: ${{ steps.cpr.outputs.pull-request-url }}"