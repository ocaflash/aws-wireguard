name: "Terraform Checks and Apply"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        node-version: '20'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Terraform Format
      id: fmt
      run: |
        terraform fmt -check
        echo "fmt_exit_code=$?" >> $GITHUB_OUTPUT

    - name: Terraform Init
      id: init
      run: |
        terraform init
        echo "init_exit_code=$?" >> $GITHUB_OUTPUT

    - name: Terraform Validate
      id: validate
      run: |
        terraform validate
        echo "validate_exit_code=$?" >> $GITHUB_OUTPUT

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: |
        terraform plan -no-color 2>&1 > plan.txt
        echo "plan_exit_code=$?" >> $GITHUB_OUTPUT
        cat plan.txt

    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const plan = fs.readFileSync('plan.txt', 'utf8');
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outputs.fmt_exit_code == '0' && 'success' || 'failure' }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outputs.init_exit_code == '0' && 'success' || 'failure' }}\`
          #### Terraform Validation 🤖\`${{ steps.validate.outputs.validate_exit_code == '0' && 'success' || 'failure' }}\`
          #### Terraform Plan 📖\`${{ steps.plan.outputs.plan_exit_code == '0' && 'success' || 'failure' }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${plan}
          \`\`\`
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outputs.plan_exit_code != '0'
      run: exit 1

#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#      run: terraform apply -auto-approve