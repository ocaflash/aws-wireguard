name: "Terraform Checks and PR Creation"

on:
  push:
    branches-ignore:
      - master

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Setup tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      id: tflint
      run: |
        tflint > tflint_output.txt || true
        TF_LINT_OUTPUT=$(cat tflint_output.txt)
        echo "TF_LINT_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "$TF_LINT_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        if grep -q "Warning:" tflint_output.txt; then
          echo "TF_LINT_WARNINGS=true" >> $GITHUB_ENV
        fi

    - name: Print tflint results to console
      run: |
        echo "tflint results:"
        echo "$TF_LINT_OUTPUT"

    - name: Fail if tflint warnings
      if: env.TF_LINT_WARNINGS == 'true'
      run: |
        echo "tflint found warnings. Failing the workflow."
        exit 1

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Check Token Permissions
      uses: actions/github-script@v6
      with:
        script: |
          const { token } = context;
          console.log('Current Token Information:');
          console.log('Repository:', context.repo.repo);
          console.log('Owner:', context.repo.owner);
          console.log('Ref:', context.ref);

          try {
            const permissions = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            console.log('Repository Permissions:', permissions.data.permission);
          } catch (error) {
            console.error('Error fetching permissions:', error);
          }

  create_pull_request:
    name: 'Create PR'
    if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - terraform-checks
    permissions:
      pull-requests: write
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Create PR'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: context.ref,
              base: 'master',
              state: 'open',
            });
            
            if (pulls.data.length < 1) {
              await github.rest.pulls.create({
                title: '[CI] Auto PR for branch ${{ github.ref_name }}',
                owner: owner,
                repo: repo,
                head: context.ref,
                base: 'master',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            } else {
              const existingPR = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existingPR.number,
                body: [
                  existingPR.body,
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            }
