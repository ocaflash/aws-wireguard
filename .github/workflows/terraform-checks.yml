name: "Terraform Checks"

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches-ignore:
      - master

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Setup tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      id: tflint
      run: |
        tflint > tflint_output.txt || true
        TF_LINT_OUTPUT=$(cat tflint_output.txt)
        echo "TF_LINT_OUTPUT<<EOF" >> $GITHUB_ENV
        echo "$TF_LINT_OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        if grep -q "Warning:" tflint_output.txt; then
          echo "TF_LINT_WARNINGS=true" >> $GITHUB_ENV
        fi

    - name: Comment on PR with tflint results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### tflint Results ðŸ“–
          <details><summary>Show Results</summary>
          \n
          \`\`\`\n
          ${{ env.TF_LINT_OUTPUT }}
          \`\`\`
          </details>`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      id: plan

    - name: Comment on PR with Terraform Plan
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ“–
          <details><summary>Show Plan</summary>
          \n
          \`\`\`\n
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          </details>`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Create Pull Request
      if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}
        base: master
        title: "Auto PR for branch ${{ github.ref_name }}"
        body: "This PR was automatically created by GitHub Actions."
        labels: "auto-pr"

    - name: Print tflint results to console
      run: |
        echo "tflint results:"
        echo "$TF_LINT_OUTPUT"

    - name: Fail if tflint warnings
      if: env.TF_LINT_WARNINGS == 'true'
      run: |
        echo "tflint found warnings. Failing the workflow."
        exit 1

#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#      run: terraform apply -auto-approve
