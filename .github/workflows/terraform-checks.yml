name: "Terraform Checks and PR Creation"

on:
  push:
    branches-ignore:
      - master

jobs:
  terraform-checks:
    name: "Terraform Checks"
    runs-on: ubuntu-latest

    outputs:
      tflint_warnings: ${{ steps.tflint.outputs.warnings }}
      has_warnings: ${{ steps.tflint.outputs.has_warnings }}

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Setup tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run tflint
      id: tflint
      shell: bash
      run: |
          set +e
          TFLINT_OUTPUT=$(tflint)
          TFLINT_EXIT_CODE=$?
          set -e
          
          echo "TFLint output:"
          echo "$TFLINT_OUTPUT" | sed 's/Warning:/\x1b[33mWarning:\x1b[0m/g'
          
          if echo "$TFLINT_OUTPUT" | grep -q "Warning:"; then
            echo "has_warnings=true" >> "$GITHUB_OUTPUT"
            {
              echo "warnings<<EOWARN"
              # Экранируем специальные символы и форматируем вывод
              echo "$TFLINT_OUTPUT" | grep -A 2 "Warning:" | \
                sed 's/`/'\''/g' | \
                sed 's/\\/\\\\/g' | \
                sed 's/"/\\"/g' | \
                sed 's/$/\\n/'
              echo "EOWARN"
            } >> "$GITHUB_OUTPUT"
          else
            echo "has_warnings=false" >> "$GITHUB_OUTPUT"
          fi
          
          if echo "$TFLINT_OUTPUT" | grep -q "Error:"; then
            exit 1
          fi
          exit 0

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

  createPullRequest:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs:
      - terraform-checks
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Construct PR Body
        id: construct_pr_body
        run: |
          pr_body="Automated pull request for code review\n- Terraform configuration validated\n- CI checks completed successfully\n\n"
          if [ "${{ needs.terraform-checks.outputs.has_warnings }}" == "true" ]; then
            warnings=$(echo -e "${{ needs.terraform-checks.outputs.tflint_warnings }}" | sed 's/\\n/\n/g')
            pr_body+="### ⚠️ TFLint Warnings:\n\`\`\`\n$warnings\n\`\`\`\n\nPlease review these warnings before merging.\n"
          fi
          pr_body+="_Created by [diillson/auto-pull-request](https://github.com/diillson/auto-pull-request)_"
          echo "pr_body<<EOF" >> $GITHUB_OUTPUT
          echo -e "$pr_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create or Update Pull Request
        uses: diillson/auto-pull-request@v1.0.1
        with:
          source_branch: ${{ github.ref }}
          destination_branch: "master"
          pr_title: "Review: Changes in ${{ github.ref }}"
          pr_body: ${{ steps.construct_pr_body.outputs.pr_body }}
          pr_reviewer: "diillson,worker"
          pr_assignee: "diillson,worker"
          pr_label: "auto-pr"
          pr_allow_empty: true
          github_token: ${{ secrets.GITHUB_TOKEN }}