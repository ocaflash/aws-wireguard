name: "Terraform Validation"

on:
  push:
    branches: [master]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  TF_VERSION: "1.9.4"
  AWS_REGION: "eu-central-1"

jobs:
  setup:
    name: "Setup Environment"
    runs-on: ubuntu-latest
    outputs:
      aws_region: ${{ steps.setup_aws.outputs.aws_region }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials with Role
        id: setup_aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: Github_to_AWS_via_FederateOIDC
        run: |
          echo "aws_region=$AWS_REGION" >> $GITHUB_OUTPUT

  terraform-fmt:
    name: "Terraform Format Check"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

  terraform-init:
    name: "Terraform Init"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Terraform Init
        id: init
        run: terraform init

  terraform-validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

  tflint:
    name: "Run TFLint"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run TFLint
        id: tflint
        shell: bash
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          
          set +e
          TFLINT_OUTPUT=$(tflint --format compact)
          TFLINT_EXIT_CODE=$?
          set -e

          echo "TFLint output:"
          echo "$TFLINT_OUTPUT"

          # Сохраняем результаты
          {
            echo "output<<EOF"
            echo "$TFLINT_OUTPUT"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          echo "exit_code=$TFLINT_EXIT_CODE" >> "$GITHUB_OUTPUT"

          # Форматируем warnings
          if echo "$TFLINT_OUTPUT" | grep -q "Warning:"; then
            echo "has_warnings=true" >> "$GITHUB_OUTPUT"
            {
              echo "warnings<<EOWARN"
              echo "$TFLINT_OUTPUT"
              echo "EOWARN"
            } >> "$GITHUB_OUTPUT"
          else
            echo "has_warnings=false" >> "$GITHUB_OUTPUT"
          fi
