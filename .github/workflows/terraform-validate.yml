name: "Terraform Validation"

on:
  pull_request:
    branches:
      - master
    paths:
      - '**.tf'
      - '**.tfvars'
  push:
    branches-ignore:
      - master
    paths:
      - '**.tf'
      - '**.tfvars'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_VERSION: "1.9.4"
  AWS_REGION: "ap-south-1"

jobs:
  terraform-checks:
    name: "Terraform Validation"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Run TFLint
        id: tflint
        shell: bash
        continue-on-error: true
        run: |
          set +e
          TFLINT_OUTPUT=$(tflint)
          TFLINT_EXIT_CODE=$?
          set -e

          echo "TFLint output:"
          echo "$TFLINT_OUTPUT"

          if echo "$TFLINT_OUTPUT" | grep -q "Warning:"; then
            echo "has_warnings=true" >> "$GITHUB_OUTPUT"
            {
              echo "warnings<<EOWARN"
              separator_length=40
              separator=$(printf '%.0s-' $(seq 1 $separator_length))
              issue_number=1
              while IFS= read -r line; do
                if [[ $line == Warning:* ]]; then
                  line_without_warning=$(echo "$line" | sed 's/^Warning: //')
                  if [[ -n $current_warning ]]; then
                    echo -e "$current_warning" | sed 's/`/'\''/g' | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed 's/$/\\n/'
                  fi
                  current_warning="**$issue_number).** **Warning:** $line_without_warning"
                  issue_number=$((issue_number + 1))
                elif [[ $line == Reference:* ]]; then
                  reference_url=$(echo "$line" | sed 's/.*https/https/')
                  current_warning+="\n**Reference:** [$reference_url]($reference_url)"
                  echo -e "$current_warning" | sed 's/`/'\''/g' | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed 's/$/\\n/'
                  echo "$separator"
                  current_warning=""
                else
                  current_warning+="\n$line"
                fi
              done <<< "$TFLINT_OUTPUT"
              echo "EOWARN"
            } >> "$GITHUB_OUTPUT"
          else
            echo "has_warnings=false" >> "$GITHUB_OUTPUT"
          fi

          exit 0

      - name: Terraform Format
        run: terraform fmt -check
        if: github.event_name == 'pull_request'

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Add PR Comment
        if: github.event_name == 'pull_request' && steps.tflint.outputs.has_warnings == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = `## Terraform Changes Review

            ### üîç Validation Results
            - ‚úÖ Terraform configuration validated
            - ‚úÖ CI checks completed

            ### ‚ö†Ô∏è TFLint Warnings (Non-Critical)

            The following warnings were found but are not blocking the deployment:

            ${process.env.TFLINT_WARNINGS}

            **Note:** These warnings are informational and do not prevent merging.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: prBody
            });
        env:
          TFLINT_WARNINGS: ${{ steps.tflint.outputs.warnings }}
