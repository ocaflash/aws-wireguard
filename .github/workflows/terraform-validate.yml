name: "Terraform Validation"

on:
  push:
    branches: [master]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  TF_VERSION: "1.9.4"
  AWS_REGION: "ap-south-1"

jobs:
  terraform-checks:
    name: "Terraform Validation"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      checks: write
      statuses: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Debug Event Context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event type: ${{ github.event.type }}"
          echo "Reference: ${{ github.ref }}"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Run TFLint
        id: tflint
        shell: bash
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          
          set +e
          TFLINT_OUTPUT=$(tflint --format compact)
          TFLINT_EXIT_CODE=$?
          set -e

          echo "TFLint output:"
          echo "$TFLINT_OUTPUT"

          # Сохраняем результаты
          {
            echo "output<<EOF"
            echo "$TFLINT_OUTPUT"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          echo "exit_code=$TFLINT_EXIT_CODE" >> "$GITHUB_OUTPUT"

          # Форматируем warnings
          if echo "$TFLINT_OUTPUT" | grep -q "Warning:"; then
            echo "has_warnings=true" >> "$GITHUB_OUTPUT"
            {
              echo "warnings<<EOWARN"
              echo "$TFLINT_OUTPUT"
              echo "EOWARN"
            } >> "$GITHUB_OUTPUT"
          else
            echo "has_warnings=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update Check Status
        uses: actions/github-script@v7
        with:
          script: |
            const checkName = 'Terraform Validation';
            const sha = context.eventName === 'pull_request' 
              ? context.payload.pull_request.head.sha 
              : context.sha;
            
            const results = {
              fmt: process.env.FMT_EXIT === '0' ? '✅' : '❌',
              validate: process.env.VALIDATE_EXIT === '0' ? '✅' : '❌',
              tflint: process.env.TFLINT_EXIT === '0' ? '✅' : '❌'
            };

            const summary = `
            ### Terraform Validation Results
            
            | Check | Status |
            |-------|--------|
            | Format | ${results.fmt} |
            | Validate | ${results.validate} |
            | TFLint | ${results.tflint} |

            ${process.env.TFLINT_OUTPUT ? '### TFLint Output\n```\n' + process.env.TFLINT_OUTPUT + '\n```' : ''}
            `;

            const conclusion = Object.values(results).includes('❌') ? 'failure' : 'success';

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: checkName,
              head_sha: sha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'Terraform Validation Results',
                summary: summary
              }
            });
        env:
          FMT_EXIT: ${{ steps.fmt.outcome == 'success' && '0' || '1' }}
          VALIDATE_EXIT: ${{ steps.validate.outcome == 'success' && '0' || '1' }}
          TFLINT_EXIT: ${{ steps.tflint.outputs.exit_code }}
          TFLINT_OUTPUT: ${{ steps.tflint.outputs.output }}

      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              fmt: process.env.FMT_EXIT === '0' ? '✅' : '❌',
              validate: process.env.VALIDATE_EXIT === '0' ? '✅' : '❌',
              tflint: process.env.TFLINT_EXIT === '0' ? '✅' : '❌'
            };

            const comment = `## Terraform Validation Results

            | Check | Status |
            |-------|--------|
            | Format | ${results.fmt} |
            | Validate | ${results.validate} |
            | TFLint | ${results.tflint} |

            ${process.env.HAS_WARNINGS === 'true' ? '### ⚠️ TFLint Warnings\n\n' + process.env.TFLINT_WARNINGS : ''}

            ${Object.values(results).includes('❌') ? '\n⛔ **Some checks failed. Please fix the issues before merging.**' : '✅ All checks passed!'}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
        env:
          FMT_EXIT: ${{ steps.fmt.outcome == 'success' && '0' || '1' }}
          VALIDATE_EXIT: ${{ steps.validate.outcome == 'success' && '0' || '1' }}
          TFLINT_EXIT: ${{ steps.tflint.outputs.exit_code }}
          HAS_WARNINGS: ${{ steps.tflint.outputs.has_warnings }}
          TFLINT_WARNINGS: ${{ steps.tflint.outputs.warnings }}